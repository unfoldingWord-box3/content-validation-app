{"version":3,"sources":["../node_modules/jspdf/dist sync","core/books.ts","core/utilities.ts","ValidationNotices.js","BookPackageContentValidator.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","newTestament","list","i","data","length","testament","push","title","oldTestament","titlesToBoolean","ob","bookDataTitles","forEach","v","k","bookIdByTitle","bookTitleById","notices_to_mt","username","languageCode","bookID","renderLink","mt","columns","field","render","rowData","link","lineNumber","Object","key","_location","location","replace","_link","repo","lineNum","bookNumberAndName","branch","repoName","toLowerCase","extension","view","namePrefix","repoUC","toUpperCase","includes","books","getLink","extra","priority","C","V","rowID","charPos","characterIndex","excerpt","extract","message","options","sorting","padding","exportButton","exportAllData","tableLayout","columnsButton","filtering","pageSize","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","href","target","withStyles","theme","root","results","util","Paper","icons","BookPackageContentValidator","useState","result","setResultValue","checkingOptions","useEffect","renderSummary","a","rawCBPResults","Typography","checkedFileCount","toLocaleString","elapsedSeconds","noticeList","style","color","checkBookPackage","checkType","language_code","checkedOptions","ValidationNotices","initBookPackageCheck","console","log","useStyles","makeStyles","createStyles","width","flexGrow","display","menuButton","marginRight","spacing","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","formControl","margin","button","instructions","marginTop","marginBottom","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","alignItemsAndJustifyContent","offset","queryProcessedOnce","App","React","state","setState","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepSkipped","step","has","handleNext","newSkipped","values","delete","prevActiveStep","query","search","window","URLSearchParams","useQuery","doInitialization","bks","get","barrayIds","split","barrayTitles","x","alert","name","b","classes","useTheme","open","setOpen","clearFlag","clearF","setClearF","handleChange","event","checked","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","variant","Drawer","anchor","paper","direction","Divider","FormGroup","row","FormControlLabel","control","Switch","onChange","handleChangeClearFlag","value","label","Stepper","map","index","stepProps","labelProps","completed","Step","StepLabel","Container","getStepContent","Button","disabled","Grid","container","item","xs","states","FormControl","required","component","FormLabel","t","Checkbox","FormHelperText","y","joinBookIds","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7244024d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 392;","import data from './books.json';\r\n\r\nexport interface bookDataIF {\r\n  \"id\": string;\r\n  \"title\": string;\r\n  \"usfm\": string;\r\n  \"testament\": string;\r\n  \"verseCount\": number;\r\n  \"chapters\": number[];\r\n}\r\n\r\ninterface bpStateIF { [x: string]: boolean[]; };\r\n\r\nexport const chaptersInBook = (bookId: string) => {\r\n    let chapters: number[];\r\n    chapters = bookData(bookId).chapters;\r\n    if ( chapters === undefined ) {\r\n      throw new Error(\"Error: chaptersInBook(): Invalid bookId\");\r\n    }\r\n    return chapters;\r\n};\r\n\r\nexport const versesInChapter = (bookId: string, chapter: number) => {\r\n  const verses = chaptersInBook(bookId)[chapter - 1];\r\n  return verses;\r\n};\r\n\r\nexport const bookData = (bookId: string) => {\r\n  const _bookData: bookDataIF = data.filter(row => row.id === bookId)[0];\r\n  return _bookData;\r\n};\r\n\r\nexport const testament = (bookId: string) => {\r\n  const _testament = bookData(bookId).testament;\r\n  return _testament;\r\n};\r\n\r\nexport const newTestament = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].testament === \"new\" ) {\r\n      list.push( data[i].title )\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const oldTestament = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].testament === \"old\" ) {\r\n      list.push( data[i].title )\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const bookDataTitles = () => {\r\n  let list: string[] = [];\r\n  for (let i=0; i < data.length; i++) {\r\n      list.push( data[i].title )\r\n  }\r\n  return list;\r\n}\r\n\r\nexport const titlesToBoolean = () => {\r\n  let ob: bpStateIF = {};\r\n  let list = bookDataTitles();\r\n  list.forEach((v,k) => {ob[v]= [false,false]});\r\n  return ob;\r\n}\r\n\r\nexport const bookIdByTitle = (title: string) => {\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].title === title ) {\r\n      return data[i].id;\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport const bookTitleById = (id: string) => {\r\n  for (let i=0; i < data.length; i++) {\r\n    if ( data[i].id === id ) {\r\n      return data[i].title;\r\n    }\r\n  }\r\n  return \"\";\r\n}","// utilities\r\nimport * as books from 'uw-content-validation';\r\n\r\n// function to convert an array to an object\r\n// with keys being 0..n\r\nexport const array_to_obj = ( (ar: any) => {\r\n    const ob = {};\r\n    Object.assign(ob,ar);\r\n    return ob;\r\n});\r\n\r\n// function to convert map to object\r\nexport const map_to_obj = ( (mp: any[]) => {\r\n    const ob: any = {};\r\n    mp.forEach((v: any,k: any) => {ob[k]=v});\r\n    return ob;\r\n});\r\n\r\n// function to convert object to a map\r\nexport const obj_to_map = ( (ob: { [x: string]: any; }) => {\r\n    const mp = new Map();\r\n    Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\r\n    return mp;\r\n});\r\n\r\n\r\ninterface ObjectLiteral {\r\n    [key: string]: any;\r\n}\r\n\r\n/**\r\n * create link to repo\r\n * @param repo\r\n * @param username\r\n * @param languageCode\r\n * @param bookID\r\n */\r\nexport const getLink = (repo: string, username: string, languageCode: string, bookID: string, lineNum: string, branch = `master`) => {\r\n    let repoName = `${languageCode.toLowerCase()}_${repo.toLowerCase()}`;\r\n    let extension = 'usfm';\r\n    let view = 'src';\r\n    let namePrefix = '';\r\n    let repoUC = repo.toUpperCase();\r\n    if (repoUC === 'UHB') {\r\n        repoName = 'hbo_uhb';\r\n    }\r\n    if (repoUC === 'UGNT') {\r\n        repoName = 'el-x-koine_ugnt';\r\n    }\r\n    if (repoUC === 'TN') {\r\n        view = 'blame';\r\n        extension = 'tsv';\r\n        namePrefix = `${repoName}_`;\r\n    }\r\n    if (['TN', 'UHB', 'UGNT', 'ULT', 'UST'].includes(repoUC)) {\r\n        let bookNumberAndName;\r\n        try {\r\n            bookNumberAndName = books.usfmNumberName(bookID).toUpperCase();\r\n            let link = `https://git.door43.org/${username}/${repoName}/${view}/branch/${branch}/${namePrefix}${bookNumberAndName}.${extension}`;\r\n            if (lineNum) {\r\n                link += `#L${lineNum}`;\r\n            }\r\n            return link;\r\n            // const anchor = `<a href=\"${link}\" target=\"_blank\">${lineNum}</a>`;\r\n            // return anchor;\r\n        } catch (e) {}\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n/* Sample of Warnings List:\r\n    C: \"1\"\r\n    V: \"1\"\r\n    bookID: \"2PE\"\r\n    characterIndex: undefined\r\n    extract: undefined\r\n    lineNumber: 4\r\n    location: \" with ID 'n1di' en 2pe book package from unfoldingword\"\r\n    message: \"TN Missing OrigQuote field\"\r\n    priority: 276\r\n*/\r\n// function to convert word frequency map\r\n// to an object suitable for MaterialTable\r\nexport const notices_to_mt = ( ob: { [x: string]: any; }, username: string, languageCode: string, bookID: string, renderLink: any) => {\r\n    let mt: ObjectLiteral = {};\r\n    mt.title = \"Validation Notices\";\r\n    mt.columns = [\r\n        { title: 'Resource', field: 'extra' },\r\n        { title: 'Priority', field: 'priority' },\r\n        { title: 'Chapter', field: 'C' },\r\n        { title: 'Verse', field: 'V' },\r\n        {\r\n            title: 'Line',\r\n            field: 'lineNumber',\r\n            render: (rowData: any) => (renderLink(rowData.link, rowData.lineNumber))\r\n        },\r\n        { title: 'Row ID', field: 'rowID' },\r\n        { title: 'Character Pos', field: 'charPos' },\r\n        { title: 'Excerpt', field: 'excerpt' },\r\n        { title: 'Message', field: 'message' },\r\n        { title: 'Location', field: 'location' },\r\n    ];\r\n    mt.data = [];\r\n    Object.keys(ob).forEach ( key => {\r\n        let _location = ob[key].location;\r\n        _location = _location.replace(/en ... book package from unfoldingword/, '' );\r\n        let _link = getLink(ob[key].extra, username, languageCode, bookID, ob[key].lineNumber);\r\n        mt.data.push({\r\n            extra: ob[key].extra,\r\n            priority: ob[key].priority,\r\n            C: ob[key].C,\r\n            V: ob[key].V,\r\n            lineNumber: ob[key].lineNumber,\r\n            rowID: ob[key].rowID,\r\n            charPos: ob[key].characterIndex,\r\n            excerpt: ob[key].extract,\r\n            link: _link,\r\n            location: _location,\r\n            message: ob[key].message,\r\n        })\r\n    })\r\n\r\n    mt.options = {\r\n        sorting: true,\r\n        padding: 'dense',\r\n        exportButton: true,\r\n        exportAllData: true,\r\n        tableLayout: 'auto',\r\n        columnsButton: true,\r\n        filtering: true,\r\n        pageSize: 10,\r\n    };\r\n\r\n    return mt;\r\n};\r\n\r\n/*\r\n// function to convert an array of words to\r\n// an object suitable for MaterialTable\r\nexport const aw_to_mt = ( ar => {\r\n    // first convert array to object\r\n    const ob = array_to_obj(ar);\r\n    const mt = {};\r\n    mt.title = \"All Words in Text Order\";\r\n    mt.columns = [\r\n        { title: 'Order', field: 'order' , type: 'numeric'},\r\n        { title: 'Word', field: 'word' },\r\n    ];\r\n    mt.data = [];\r\n    Object.keys(ob).forEach ( n => {\r\n        mt.data.push({ order: n, word: ob[n] })\r\n    });\r\n\r\n    mt.options = { sorting: true };\r\n\r\n    return mt;\r\n});\r\n*/","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport * as util from './core/utilities.ts';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nexport const renderLink = (link, lineNumber) => {\r\n  if (link) {\r\n    return <a href={link} target=\"_blank\">{lineNumber}</a>\r\n  } else if (lineNumber) {\r\n    return `${lineNumber}`\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction ValidationWarnings({\r\n    results,\r\n    username,\r\n    languageCode,\r\n    bookID,\r\n  }) {\r\n\r\n    let mt = util.notices_to_mt(results, username, languageCode, bookID, renderLink);\r\n    return (\r\n      <Paper>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title={mt.title}\r\n          columns={mt.columns}\r\n          data={mt.data}\r\n          options={mt.options}\r\n        />\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  ValidationWarnings.propTypes = {\r\n    /** @ignore */\r\n    results: PropTypes.array.isRequired,\r\n  };\r\n\r\n  const styles = theme => ({\r\n    root: {\r\n    },\r\n  });\r\n\r\n  export default withStyles(styles)(ValidationWarnings);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport {checkBookPackage} from 'uw-content-validation';\r\nimport ValidationNotices from './ValidationNotices';\r\n\r\nfunction BookPackageContentValidator({bookID}) {\r\n    const username = 'unfoldingword';\r\n    const language_code = 'en';\r\n    //const branch = 'master';\r\n    // Check a single Bible book across many repositories\r\n    const [result, setResultValue] = useState(\"Waiting-CheckBookPackage\");\r\n\r\n    let checkingOptions = { // Uncomment any of these to test them\r\n        // 'extractLength': 25,\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Use an IIFE (Immediately Invoked Function Expression)\r\n        //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\r\n        (async () => {\r\n\r\n            // Display our \"waiting\" message\r\n            setResultValue(<p style={{ color: 'red' }}>Waiting for check results for {username} {language_code} <b>{bookID}</b> book package…</p>);\r\n\r\n            const rawCBPResults = await checkBookPackage(username, language_code, bookID, setResultValue, checkingOptions);\r\n            //console.log(\"rawCBPResults=\", rawCBPResults);\r\n            // Add some extra fields to our rawCBPResults object in case we need this information again later\r\n            rawCBPResults.checkType = 'BookPackage';\r\n            rawCBPResults.username = username;\r\n            rawCBPResults.language_code = language_code;\r\n            rawCBPResults.bookID = bookID;\r\n            rawCBPResults.checkedOptions = checkingOptions;\r\n\r\n            function renderSummary(rawCBPResults) {\r\n                return (\r\n                    <>\r\n                    <Typography>\r\n                        Successfully checked&nbsp;\r\n                        {rawCBPResults.checkedFileCount.toLocaleString()}&nbsp;\r\n                        files in&nbsp;\r\n                        {rawCBPResults.elapsedSeconds}&nbsp;\r\n                        seconds\r\n                    </Typography>\r\n                    <Typography>\r\n                        There were {rawCBPResults.noticeList.length} notices.\r\n                    </Typography>\r\n                </>\r\n            );\r\n            }\r\n\r\n            setResultValue(<>\r\n                {renderSummary(rawCBPResults)}\r\n                {rawCBPResults.noticeList.length ?\r\n                  <ValidationNotices\r\n                    results={rawCBPResults.noticeList}\r\n                    username={username}\r\n                    languageCode={language_code}\r\n                    bookID={bookID}\r\n                  />\r\n                : <br/> }\r\n            </>);\r\n\r\n        })(); // end of async part in unnamedFunction\r\n        // eslint-disable-next-line\r\n    }, []); // end of useEffect part\r\n\r\n    // {/* <div className={classes.root}> */}\r\n    return (\r\n        <div>\r\n        {result}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookPackageContentValidator;\r\n","import React from 'react';\nimport clsx from 'clsx';\n//import { withStyles, makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n//import CircularProgress from '@material-ui/core/CircularProgress';\n//import Popover from '@material-ui/core/Popover';\n\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n//import Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport Switch from '@material-ui/core/Switch';\n\n//import { green } from '@material-ui/core/colors';\nimport * as books from '../src/core/books';\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\n\nimport BookPackageContentValidator from './BookPackageContentValidator';\nimport {initBookPackageCheck} from 'uw-content-validation';\n\nasync function doInitialization() {\n  const username = 'unfoldingword';\n  const language_code = 'en';\n  const branch = 'master'\n  // pass one book to force load of TQ\n  const success = await initBookPackageCheck(username, language_code, ['JON','JUD'], branch);\n  if (!success) {\n      console.log(`Failed to pre-load all repos`)\n  }      \n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      flexGrow: 1,\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    alignItemsAndJustifyContent: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },  \n    offset: {...theme.mixins.toolbar},\n  }),\n);\n/*\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n*/\ninterface bpStateIF { [x: string]: boolean[]; };\n\nfunction joinBookIds(state: bpStateIF ): string[] {\n  const x = Object.keys(state);\n  let y: string[] = [];\n  for (let i=0; i<x.length; i++) {\n    if ( state[x[i]][0] ) {\n      y.push(books.bookIdByTitle(x[i]));\n    }\n  }\n  //return y.join();\n  return y;\n}\n\n    \nfunction getSteps() {\n  return ['Select Books', 'Content Validation Details'];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return 'Select books, then click Next to generate book package details';\n    case 1:\n      return 'Content Validation Results';\n    default:\n      return 'Unknown step';\n  }\n}\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nlet queryProcessedOnce = false;\nfunction useQuery() {\n  let search = window.location.search;\n  //console.log(\"url=\",window.location.origin,window.location.pathname)\n  return new URLSearchParams(search);\n}\n\nexport default function App() {\n  const [state, setState] = React.useState({ ...books.titlesToBoolean() }); \n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n\n  /* ----------------------------------------------------------\n      Stepper\n  */\n  const steps = getSteps();\n\n  const isStepOptional = (step: number) => {\n    return false;\n  };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  /*\n  const handleReset = () => {\n    setActiveStep(0);\n    let states = Object.keys(state);\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n    }\n  };\n  */\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  let query = useQuery();\n  if ( activeStep === 0 && queryProcessedOnce === false ) {\n    doInitialization();\n    queryProcessedOnce = true;\n    let bks   = query.get(\"books\");\n    if ( bks !== null ) {\n      // user has launched the app with URL query parameters\n      let barrayIds = bks.split(',');\n      let barrayTitles: string[] = [];\n      for ( let i=0; i < barrayIds.length; i++ ) {\n        let x = books.bookTitleById(barrayIds[i]);\n        if ( x === \"\" ) {\n          alert(\"Invalid Book Id:\"+barrayIds[i]);\n          break;\n        }\n        barrayTitles.push(x);\n      }\n      for( let i=0; i < barrayTitles.length; i++) {\n        let name = barrayTitles[i];\n        console.log(\"name:\",name)\n        // set the state variables\n        state[name][0] = true;\n        state[name][1] = false;\n        let b: boolean[] = [];\n        b[0] = true;\n        b[1] = false;  \n      }\n      // skip to step 2...\n      //activeStep = 1; //works sort of\n      handleNext();\n      // for URL, always clear local cache\n      //dbsetup.bpstore.clear();\n    }\n  }\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  /* ----------------------------------------------------------\n      Popover\n  */\n  //const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  /*\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const popen = Boolean(anchorEl);\n  const id = popen ? 'simple-popover' : undefined;\n  */\n\n\n  /* ----------------------------------------------------------\n      Menu drawer\n  */\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleSelectNoneOt = () => {\n    let states = books.oldTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = false;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectAllOt = () => {\n    let states = books.oldTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = true;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = true;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectNoneNt = () => {\n    let states = books.newTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = false;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = false;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  const handleSelectAllNt = () => {\n    let states = books.newTestament();\n    for( let i=0; i < states.length; i++) {\n      state[states[i]][0] = true;\n      state[states[i]][1] = false;\n      let name = states[i];\n      let b: boolean[] = [];\n      b[0] = true;\n      b[1] = false;  \n      setState({ ...state, [name]: b });\n    }\n  };\n\n  /* ----------------------------------------------------------\n      Switch for data refresh\n  */\n const [clearF, setClearF] = React.useState({\n    clearFlag: false,\n  });\n\n  const handleChangeClearFlag = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setClearF({ ...clearF, [name]: event.target.checked });\n  };\n\n\n  \n  /* ----------------------------------------------------------\n      Form/checkbox stuff \n  */\n  // these are for the initial book seletion\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let b: boolean[] = [];\n    b[0] = event.target.checked;\n    b[1] = false;\n    setState({ ...state, [name]: b });\n  };\n\n  /*\n  const handleFinishedChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    let b: boolean[] = [];\n    b[0] = true;\n    b[1] = event.target.checked;\n    setState({ ...state, [name]: b });\n  };\n  */\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" \n          className={clsx(classes.appBar, {[classes.appBarShift]: open })}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Book Package Content Validation\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch checked={clearF.clearFlag} onChange={handleChangeClearFlag('clearFlag')} value=\"clearFlag\" color=\"primary\" />\n              }\n              label=\"Refresh Book Package Data\"\n            />\n        </FormGroup>\n        <Divider />\n      </Drawer> \n      <Paper>\n        <Typography> <br/> <br/> </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps: { completed?: boolean } = {};\n            const labelProps: { optional?: React.ReactNode } = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <Container>\n          <div className={classes.alignItemsAndJustifyContent}>\n          <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n          </div>\n\n          <div className={classes.alignItemsAndJustifyContent}>\n            <Button disabled={activeStep === 0} onClick={handleBack} color=\"primary\" variant=\"contained\" className={classes.button}>\n              Back\n            </Button>\n\n            {isStepOptional(activeStep) && (\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSkip} className={classes.button}>\n                Skip\n              </Button>\n            )}\n\n            <Button disabled={activeStep === 1} variant=\"contained\" color=\"primary\" onClick={handleNext} className={classes.button}>\n              Next\n            </Button>\n\n          </div>\n\n          <div className={classes.alignItemsAndJustifyContent}>\n            {(activeStep === 0) && (\n              <Grid container spacing={3}>\n                <Grid item xs={6}>\n                  <Paper>\n                    <Typography> <br/> </Typography>\n                    <div>\n                    <Button onClick={handleSelectAllOt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select All\n                    </Button>\n                    <Button onClick={handleSelectNoneOt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select None\n                    </Button>\n                    </div>\n                    <FormControl required component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">Old Testament</FormLabel>\n                    <FormGroup>\n                      {books.oldTestament().map(t => \n                        <FormControlLabel\n                          control={<Checkbox checked={state[t][0]} onChange={handleChange(t)} value={t} />}\n                          label={t} key={t}\n                        />\n                      )}                \n                    </FormGroup>\n                    <FormHelperText />\n                    </FormControl>\n                  </Paper>\n                </Grid>\n                <Grid item xs={6}>\n                  <Paper>\n                    <Typography> <br/> </Typography>\n                    <div>\n                    <Button onClick={handleSelectAllNt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select All\n                    </Button>\n                    <Button onClick={handleSelectNoneNt} color=\"primary\" variant=\"contained\" className={classes.button}>\n                      Select None\n                    </Button>\n                    </div>\n\n                    <FormControl required component=\"fieldset\" className={classes.formControl}>\n                    <FormLabel component=\"legend\">New Testament</FormLabel>\n                    <FormGroup>\n                      {books.newTestament().map(t => \n                        <FormControlLabel\n                          control={<Checkbox checked={state[t][0]} onChange={handleChange(t)} value={t} />}\n                          label={t} key={t}\n                        />\n                      )}                \n                    </FormGroup>\n                    <FormHelperText />\n                    </FormControl>\n                  </Paper>\n                </Grid>\n              </Grid>\n            )}\n\n\n            {(activeStep === 1) && (\n              <>\n              <div>\n                <Paper>\n                {\n                  joinBookIds(state).map(id => \n                    <div>\n                    <Typography variant=\"h6\" >Book Package for {books.bookTitleById(id)} </Typography>\n                    <BookPackageContentValidator bookID={id} key={id} />\n                    </div>\n                  )\n                }\n                </Paper>\n              </div>\n              </>\n            )}\n\n\n          </div>\n        </Container>\n      </Paper>\n    </div>\n  );\n}\n\n/* code graveyard\n\n              <>{ doInitialization( joinBookIds(state) ) }</>\n\n\n\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}